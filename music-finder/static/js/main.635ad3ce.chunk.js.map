{"version":3,"sources":["reducers/initialState.js","actions/types.js","reducers/rootReducer.js","reducers/search.js","store.js","components/MusicList.js","services/spotifyQuery.js","services/searchService.js","components/SearchBar.js","actions/search.js","components/Artist.js","components/Album.js","components/Track.js","components/MusicCard.js","App.js","serviceWorker.js","index.js"],"names":["initialState","search","LOAD_SEARCH_RESULT","CLEAR_SEARCH_RESULT","combineReducers","state","arguments","length","undefined","InitialState","action","type","response","createStore","RootReducer","applyMiddleware","thunk","MusicList","render","react_default","a","createElement","style","flexGrow","Grid","container","spacing","direction","justify","_this","props","artists","items","map","data","components_Artist","albums","components_Album","tracks","components_Track","Component","connect","ownProps","SpotifyQuery","queryFor","text","endpoint","process","REACT_APP_ENVIRONMENT","SearchService","url","this","get","authKey","localStorage","getItem","authorize","Content-Type","Authorization","window","location","href","encodeURIComponent","axios","method","headers","getHeaders","then","catch","error","removeItem","SearchBar","handleChange","event","setState","Object","objectSpread","target","value","searchMusic","dispatch","classes","makeStyles","theme","root","display","formControl","margin","FormControl","className","FormGroup","row","RadioGroup","aria-label","name","onChange","FormControlLabel","control","Radio","color","label","labelPlacement","Input","id","placeholder","padding-left","Button","onClick","variant","button","Artist","item","components_MusicCard","image","images","Typography","gutterBottom","component","genres","join","popularity","Album","artistsName","artist","availableMarkets","markets","market","available_markets","Track","millisToMinutes","millis","minutes","Math","floor","seconds","toFixed","album","duration_ms","MusicCard","xs","max-width","width","Card","CardActionArea","CardMedia","height","CardContent","text-align","children","App","hash","substr","split","forEach","parameter","startsWith","setItem","replace","origin","react_redux_es","store","components_SearchBar","components_MusicList","Boolean","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.635ad3ce.chunk.js","sourcesContent":["export default { \n    search: {}\n}","export const LOAD_SEARCH_RESULT = 'LOAD_SEARCH_RESULT';\nexport const CLEAR_SEARCH_RESULT = 'CLEAR_SEARCH_RESULT';","import { combineReducers } from 'redux';\nimport { search } from './search';\n\nexport default combineReducers({\n    search\n})","import InitialState from './initialState';\nimport { LOAD_SEARCH_RESULT, CLEAR_SEARCH_RESULT } from '../actions/types';  \n\nexport function search(state = InitialState.search, action) {  \n  switch(action.type) {\n    case LOAD_SEARCH_RESULT:\n      return action.response\n      case CLEAR_SEARCH_RESULT:\n        return InitialState.search\n    default: \n      return state;\n  }\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport RootReducer from './reducers/rootReducer';\n\nexport default createStore(RootReducer, applyMiddleware(thunk));","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { Artist, Album, Track } from './';\nimport { Grid } from \"@material-ui/core\";\n\nclass MusicList extends Component {\n\n    render = () => {\n        \n        return <div style={{flexGrow: \"1\"}} >\n            <Grid\n                container\n                spacing={3}\n                direction=\"row\"\n                justify=\"center\">\n                \n                {this.props.search.artists && this.props.search.artists.items.map((data) => (\n                    <Artist data={data} />\n                ))}\n                {this.props.search.albums && this.props.search.albums.items.map((data) => (\n                    <Album data={data} />\n                ))}\n                {this.props.search.tracks && this.props.search.tracks.items.map((data) => (\n                    <Track data={data} />\n                ))}\n        \n            </Grid>\n        </div>\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        search: state.search\n    };\n} \nexport default connect(mapStateToProps)(MusicList);","export default class SpotifyQuery {  \n    \n    queryFor = (type, text) => {\n        return this.endpoint() + '/v1/search?q=' + text + '&type=' + type;\n    }\n\n    endpoint = () => {\n        if (process.env.REACT_APP_ENVIRONMENT === 'dev')\n            return 'http://localhost:8080'\n        return 'https://api.spotify.com'\n    }\n}","import axios from 'axios';\nimport SpotifyQuery from './spotifyQuery';\n\nexport default class SearchService {  \n    \n    static search(type, text) {\n        const url = new SpotifyQuery().queryFor(type, text)\n        return this.get(url);\n    }\n\n    static get = url => axios(\n        {\n            method: 'get',\n            url: url,\n            headers: this.getHeaders(),\n        }\n    ).then(response => {\n        return response;\n    }).catch(error => {\n        localStorage.removeItem('authKey')\n        return {};\n    })\n\n    static getHeaders() {\n        const authKey = localStorage.getItem('authKey')\n        if(!!!authKey)\n            this.authorize()\n        return {\n            'Content-Type' : 'application/json',\n            'Authorization' : \"Bearer \" + authKey, \n        }\n    }\n\n    static authorize() {\n        window.location.href='https://accounts.spotify.com/authorize?response_type=token&redirect_uri=' + encodeURIComponent('http://localhost:3000') + '&client_id=68a59e233a7a40cc93cd10982a556759'\n    }\n}","import React, {Component} from 'react';\nimport {connect} from 'react-redux'\nimport { search } from '../actions/search';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { \n    Button, \n    Input, \n    FormControl, \n    FormControlLabel, \n    Radio,\n    RadioGroup,\n    FormGroup,\n} from \"@material-ui/core\";\n\nclass SearchBar extends Component {\n\n    state = {\n        type: 'artist',\n        text: ''\n    }\n\n    handleChange = event => {\n        this.setState({ ...this.state, type: event.target.value});\n    }\n\n    searchMusic = () => {\n        this.props.dispatch(search(this.state.type, this.state.text))\n    }\n\n    render = () => {\n\n        const classes = makeStyles(theme => ({\n            root: {\n                display: 'flex',\n            },\n            formControl: {\n                margin: theme.spacing(3),\n            },\n        }));\n\n        return <FormControl className={classes.formControl}>\n          <FormGroup row>\n\n            <RadioGroup aria-label=\"position\" name=\"position\" value={this.state.type} onChange={this.handleChange} row>\n              <FormControlLabel\n                value=\"artist\"\n                control={<Radio color=\"primary\" />}\n                label=\"Artist\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                value=\"album\"\n                control={<Radio color=\"primary\" />}\n                label=\"Album\"\n                labelPlacement=\"start\"\n              />\n              <FormControlLabel\n                value=\"track\"\n                control={<Radio color=\"primary\" />}\n                label=\"Track\"\n                labelPlacement=\"start\"\n              />\n            </RadioGroup>\n            <FormControlLabel\n              control={\n                <Input id={'txtSearch'} placeholder=\"Your search\" onChange={event => this.setState({ ...this.state, text: event.target.value})} />\n              }\n              style={{\"padding-left\": \"30px\"}}\n            />\n            <Button id={'btnSearch'} onClick={this.searchMusic} variant=\"contained\" color=\"primary\" className={classes.button}>\n              Search\n            </Button>\n          </FormGroup>\n        </FormControl>\n    }\n}\n\nexport default connect()(SearchBar);","import SearchService from '../services/searchService';\nimport { LOAD_SEARCH_RESULT, CLEAR_SEARCH_RESULT } from './types';  \n\nexport function search(type, text) {\n    return dispatch => {\n        dispatch({type: CLEAR_SEARCH_RESULT})\n        return SearchService.search(type, text)\n            .then(response => {\n                dispatch({type: LOAD_SEARCH_RESULT, response: response.data});\n            })\n            .catch(error => {\n                dispatch({type: LOAD_SEARCH_RESULT, response: {}});\n            })\n    };\n}","import React, {Component} from 'react';\nimport { MusicCard } from './';\nimport { Typography } from \"@material-ui/core\";\n\nclass Artist extends Component {\n\n    render = () => {\n        const item = this.props.data;\n\n        return <MusicCard image={item.images[0] ? item.images[0].url : ''}>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {item.name}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {item.genres.join(', ')}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {'Popularity: ' + item.popularity}\n            </Typography>\n        </MusicCard>\n    }\n}\n\nexport default Artist;","import React, {Component} from 'react';\nimport { MusicCard } from './';\nimport { Typography } from \"@material-ui/core\";\n\nclass Album extends Component {\n\n    artistsName = () => (\n        this.props.data.artists.map(artist => {\n            return artist.name\n        })\n    )\n\n    availableMarkets = markets => (\n        markets.map(market => market)\n    )\n\n    render = () => {\n        const item = this.props.data;\n\n        return <MusicCard image={item.images[0] ? item.images[0].url : ''}>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {item.name}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {this.artistsName().join(', ')}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {'Availability: ' + item.available_markets.join(', ')}\n            </Typography>\n        </MusicCard>\n    }\n}\n\nexport default Album;","import React, {Component} from 'react';\nimport { MusicCard } from './';\nimport { Typography } from \"@material-ui/core\";\n\nclass Track extends Component {\n\n    millisToMinutes = millis => {\n        var minutes = Math.floor(millis / 60000);\n        var seconds = ((millis % 60000) / 1000).toFixed(0);\n        return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\n    }\n\n    render = () => {\n        const item = this.props.data;\n\n        return <MusicCard image={item.album.images[0] ? item.album.images[0].url : ''}>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {item.name}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {'Artists: ' + item.artists.map(artist => artist.name).join(', ')}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {'Album: ' + item.album.name}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {'Duration: ' + this.millisToMinutes(item.duration_ms)}\n            </Typography>\n        </MusicCard>\n    }\n}\n\nexport default Track;","import React, {Component} from 'react';\nimport { \n    Card,\n    CardActionArea,\n    CardMedia,\n    CardContent,\n    Grid\n} from \"@material-ui/core\";\n\nclass MusicCard extends Component {\n\n    render = () => {\n        return <Grid item xs style={{\"max-width\": \"350px\", width: \"350px\"}}>\n            <Card style={{margin: \"10px\"}}>\n                <CardActionArea>\n                    <CardMedia\n                        component=\"img\"\n                        image={this.props.image}\n                        style={{height: \"140px\", width: \"350px\"}}\n                    />\n                    <CardContent style={{\"text-align\": \"left\"}}>\n                        {this.props.children}\n                    </CardContent>\n                </CardActionArea>\n            </Card>\n        </Grid>\n    }\n}\n\nexport default MusicCard;","import React from \"react\";\nimport store from './store'\nimport { Provider } from 'react-redux';\nimport { MusicList, SearchBar } from './components';\n\nfunction App() {\n\n  if(window.location.hash) {\n    const hash = window.location.hash.substr(1).split('&');\n    hash.forEach(parameter => {\n      if(parameter.startsWith('access_token=')) {\n        localStorage.setItem('authKey', parameter.replace('access_token=', ''))\n        window.location.replace(window.location.origin);\n      }\n    })\n  }\n\n  return (\n    <Provider store={store}>\n        <div style={{\"text-align\": \"center\"}}>\n          <SearchBar />\n          <MusicList />\n        </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}